{"version":3,"file":"static/js/117.b020b657.chunk.js","mappings":"mNAIMA,EAAe,SAACC,GAIpB,MADW,mEACDC,KAAKD,IAAyB,IAAhBA,EAAKE,MAC/B,EAEMC,EAAW,CACf,KACA,QACA,OACA,iDACA,sCACA,YACA,UACA,oBACA,kDACA,iBACA,qBACA,OACA,QACA,gCACA,UAqBIC,EAAY,SAAHC,GAA+B,IAAzBC,EAAWD,EAAXC,YAAaC,EAAIF,EAAJE,KAIhCC,GAA0BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9BI,EAAGF,EAAA,GAAEG,EAAUH,EAAA,GACtBI,GAAiCL,EAAAA,EAAAA,UAASN,EAASS,IAAKG,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjDE,EAAOD,EAAA,GAAEE,EAAaF,EAAA,GAC7BG,GAA2BT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BE,EAAID,EAAA,GAAEE,EAAUF,EAAA,GACvBG,GAAgCb,EAAAA,EAAAA,WAAS,GAAKc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAvCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAuB5B,OAhDkB,SAACG,EAAUC,GAC7B,IAAMC,GAAgBC,EAAAA,EAAAA,WAEtBC,EAAAA,EAAAA,YAAU,WACRF,EAAcG,QAAUL,CAC1B,GAAG,CAACA,KAEJI,EAAAA,EAAAA,YAAU,WACR,GAAIH,EAAO,CACT,IAAMK,EAAKC,aAAY,WACrBL,EAAcG,SAChB,GAAGJ,GACH,OAAO,kBAAMO,cAAcF,EAAI,CACjC,CACA,OAAO,WAAO,CAChB,GAAG,CAACL,GACN,CAWEQ,EAAY,WACV,IAAIC,EAASxB,EACTyB,EAAUjB,EACVA,EAXO,IAWQjB,EAASS,GAAKV,SAC/BkC,GAAU,EACVC,EAAU,GAERD,IAAWjC,EAASD,OAClBI,GACFO,EAAW,GACXQ,EAAW,IAEXI,GAAY,IAGdR,EAAcd,EAASiC,GAAQE,MAAM,EAAGD,IACxCxB,EAAWuB,GACXf,EAAWgB,EAAU,GAEzB,GAAGb,EA1BW,GA0BQ,OAGpBe,EAAAA,EAAAA,KAAA,OACEC,UAAU,mBACVC,MAAO1C,EAAaiB,GAAW,CAAC,EAAI,CAAE0B,MAAO,OAC7CC,aAAc,kBAAMlB,GAAY,EAAM,EACtCmB,aAAc,kBAAOhC,EAAMT,EAASD,QAAWuB,GAAY,EAAK,EAACoB,UAEjEN,EAAAA,EAAAA,KAAA,KAAGO,KAAM/C,EAAaiB,GAAQ,UAAA+B,OAAcxC,GAAU,GAAIyC,OAAO,SAASC,IAAI,sBAAqBJ,UACjGN,EAAAA,EAAAA,KAAA,QAAAM,SAAOtC,OAIf,EAEAH,EAAU8C,aAAe,CACvB5C,aAAa,GAQf,Q,UC7FM6C,EAAa,WAAH,OACdC,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,WAAUK,SAAA,EACvBO,EAAAA,EAAAA,MAAA,KAAAP,SAAA,CAAG,6CACwCN,EAAAA,EAAAA,KAAA,aAE3CA,EAAAA,EAAAA,KAAA,KAAAM,SAAG,iBAGC,EAGFQ,EAAY,WAAH,OACbD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,WAAUK,SAAA,EACvBN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,+BACHN,EAAAA,EAAAA,KAACnC,EAAS,CAACG,KAAK,2BAChBgC,EAAAA,EAAAA,KAAA,KAAGE,MAAO,CAAEa,UAAW,MAAOT,SAAC,kEAC/BN,EAAAA,EAAAA,KAACnC,EAAS,CAACG,KAAK,kCAChBgC,EAAAA,EAAAA,KAACnC,EAAS,CAACG,KAAK,4BACZ,EAqBR,EAlBgB,WAAH,OACXgC,EAAAA,EAAAA,KAACgB,EAAAA,EAAI,CACHC,MAAM,UACNC,YAAY,+BAA8BZ,UAE1CO,EAAAA,EAAAA,MAAA,WAASZ,UAAU,OAAOR,GAAG,UAASa,SAAA,EACpCN,EAAAA,EAAAA,KAAA,UAAAM,UACEN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOK,UACpBN,EAAAA,EAAAA,KAAA,MAAAM,UAAIN,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACC,GAAG,WAAUd,SAAC,mBAG5BN,EAAAA,EAAAA,KAACY,EAAU,KACXZ,EAAAA,EAAAA,KAACc,EAAS,KACVd,EAAAA,EAAAA,KAACqB,EAAAA,EAAY,QAEV,C","sources":["components/Contact/EmailLink.js","pages/Contact.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\n// Validates the first half of an email address.\nconst validateText = (text) => {\n  // NOTE: Passes RFC 5322 but not tested on google's standard.\n  // eslint-disable-next-line no-useless-escape\n  const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\n  return re.test(text) || text.length === 0;\n};\n\nconst messages = [\n  'hi',\n  'hello',\n  'hola',\n  'you-can-email-me-at-literally-anything! Really',\n  'well, not anything. But most things',\n  'like-this',\n  'or-this',\n  'but not this :(  ',\n  'you.can.also.email.me.with.specific.topics.like',\n  'just-saying-hi',\n  'please-work-for-us',\n  'help',\n  'admin',\n  'or-I-really-like-your-website',\n  'thanks',\n];\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay) {\n      const id = setInterval(() => {\n        savedCallback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n    return () => {}; // pass linter\n  }, [delay]);\n};\n\nconst EmailLink = ({ loopMessage, mail }) => {\n  const hold = 50; // ticks to wait after message is complete before rendering next message\n  const delay = 50; // tick length in mS\n\n  const [idx, updateIter] = useState(0); // points to current message\n  const [message, updateMessage] = useState(messages[idx]);\n  const [char, updateChar] = useState(0); // points to current char\n  const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n\n  useInterval(() => {\n    let newIdx = idx;\n    let newChar = char;\n    if (char - hold >= messages[idx].length) {\n      newIdx += 1;\n      newChar = 0;\n    }\n    if (newIdx === messages.length) {\n      if (loopMessage) {\n        updateIter(0);\n        updateChar(0);\n      } else {\n        setIsActive(false);\n      }\n    } else {\n      updateMessage(messages[newIdx].slice(0, newChar));\n      updateIter(newIdx);\n      updateChar(newChar + 1);\n    }\n  }, isActive ? delay : null);\n\n  return (\n    <div\n      className=\"inline-container\"\n      style={validateText(message) ? {} : { color: 'red' }}\n      onMouseEnter={() => setIsActive(false)}\n      onMouseLeave={() => (idx < messages.length) && setIsActive(true)}\n    >\n      <a href={validateText(message) ? (`mailto:${mail}`) : ''} target=\"_blank\" rel=\"noopener noreferrer\">\n        <span>{mail}</span>\n      </a>\n    </div>\n  );\n};\n\nEmailLink.defaultProps = {\n  loopMessage: false,\n};\n\nEmailLink.propTypes = {\n  loopMessage: PropTypes.bool,\n  mail: PropTypes.string.isRequired,\n};\n\nexport default EmailLink;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\nimport EmailLink from '../components/Contact/EmailLink';\nimport ContactIcons from '../components/Contact/ContactIcons';\n\nconst WeChatPart = () => (\n  <div className=\"email-at\">\n    <p>\n      Feel free to get in touch! My WeChat ID: <br />\n    </p>\n    <b>\n      LuvPungGaw\n    </b>\n  </div>\n);\n\nconst EmailPart = () => (\n  <div className=\"email-at\">\n    <p>Or, you can email me at: </p>\n    <EmailLink mail=\"zhaoxun.liu@proton.me\" />\n    <p style={{ marginTop: '4%' }}>If it is for academic or professional purposes, preferably: </p>\n    <EmailLink mail=\"zhaoxun.liu@mail.utoronto.ca\" />\n    <EmailLink mail=\"lorenz@cs.toronto.edu\" />\n  </div>\n);\n\nconst Contact = () => (\n  <Main\n    title=\"Contact\"\n    description='Contact Zhaoxun \"Lorenz\" Liu'\n  >\n    <article className=\"post\" id=\"contact\">\n      <header>\n        <div className=\"title\">\n          <h2><Link to=\"/contact\">Contact</Link></h2>\n        </div>\n      </header>\n      <WeChatPart />\n      <EmailPart />\n      <ContactIcons />\n    </article>\n  </Main>\n);\n\nexport default Contact;\n"],"names":["validateText","text","test","length","messages","EmailLink","_ref","loopMessage","mail","_useState","useState","_useState2","_slicedToArray","idx","updateIter","_useState3","_useState4","message","updateMessage","_useState5","_useState6","char","updateChar","_useState7","_useState8","isActive","setIsActive","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","newIdx","newChar","slice","_jsx","className","style","color","onMouseEnter","onMouseLeave","children","href","concat","target","rel","defaultProps","WeChatPart","_jsxs","EmailPart","marginTop","Main","title","description","Link","to","ContactIcons"],"sourceRoot":""}